package rules.EventMessage.EventFired_dir.BAEF1000BankAccountVerification_dir.BAEF1100BankAccount_dir.BAEF1110AddedChanged_dir
uses gw.api.json.JsonConfigAccess
uses gw.api.json.mapping.JsonMappingOptions
uses trainingapp.gosutemplates.BankAccountDataTemplate

@gw.rules.RuleName("BAEF1111 - Field Changed")
internal class BAEF1111FieldChanged {
  static function doCondition(messageContext : entity.MessageContext) : boolean {
    
/*start00rule*/
return (messageContext.Root as BankAccount).isFieldChanged("BankName") or
(messageContext.Root as BankAccount).isFieldChanged("RoutingNumber") or
(messageContext.Root as BankAccount).isFieldChanged("AccountNumber") or
(messageContext.Root as BankAccount).isFieldChanged("AccountType")


/*end00rule*/

  }

  static function doAction(messageContext : entity.MessageContext, actions : gw.rules.Action) {

/*start00rule*/
//messageContext root must be cast to appropriate type
var aBankAccount = messageContext.Root as BankAccount
var msg : Message
var payload = ""

// For savings account use Gosu template
if (aBankAccount.AccountType == BankAccountType.TC_SAVINGS) {
  payload = BankAccountDataTemplate.renderToString(aBankAccount.ABContact.PublicID, aBankAccount)
  msg = messageContext.createMessage(payload)

  // For checking or other accounts use Integration View
  } else {
    // Create JsonMapper object
    var jsonMapper = JsonConfigAccess.getMapper("trn.ta.bankaccount-1.0", "BankAccountInfo")
    // Create JsonMapperOptions object
    var mappingOpts = new JsonMappingOptions().withFilter("trn.ta.bankaccount-1.0")
    // Create TransformResult object
    var transformResult = jsonMapper.transformObject(aBankAccount, mappingOpts)
    //Create message
    payload = transformResult.toXmlString()
    msg = messageContext.createMessage(payload)
  }

// Print statement is for training purposes only
print("\n*** Stage 2 -- Creating the message ***" +
      "\n    Event Fired rules: " + actions.Rule.DisplayName +
      "\n    Sending payload to console:" +
      "\n" + msg.Payload)
/*end00rule*/

  }
}
